from aiogram import Router, Bot, types
from aiogram.filters import CommandStart
from aiogram.types import Message

from config.settings import config, logger
from keyboards.inline import main_menu_keyboard
from utils.commands import set_bot_commands
from utils.smt_texts import welcome_text

router = Router()


@router.message(CommandStart())
async def start_cmd(message: Message):
    """–û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /start"""
    await message.answer(
        text=welcome_text,
        reply_markup=main_menu_keyboard(),
        parse_mode="HTML"
    )


async def pin_webapp_menu():
    """–ó–∞–∫—Ä—ñ–ø–ª–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –≤–µ–±-–¥–æ–¥–∞—Ç–∫–æ–º —É –∫–∞–Ω–∞–ª—ñ"""
    async with Bot(token=config.BOT_TOKEN) as bot:
        for channel_id in config.CHANNEL_IDS:
            try:
                logger.info(f"–°–ø—Ä–æ–±–∞ –∑–∞–∫—Ä—ñ–ø–ª–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –∫–∞–Ω–∞–ª—ñ {channel_id}")
                msg = await bot.send_message(
                    chat_id=channel_id,
                    text=(
                        "<b>üõç –Ø–∫ –æ—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è?</b>\n\n"
                        "1Ô∏è‚É£ –û–±–µ—Ä—ñ—Ç—å —Ç–æ–≤–∞—Ä —É –Ω–∞—à–æ–º—É –∫–∞—Ç–∞–ª–æ–∑—ñ.\n\n"
                        "2Ô∏è‚É£ –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å <a href='https://t.me/barska_olena'>¬´–ù–∞–ø–∏—Å–∞—Ç–∏ –º–µ–Ω–µ–¥–∂–µ—Ä—É¬ª</a> –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó.\n\n"
                        "3Ô∏è‚É£ –£–∑–≥–æ–¥—å—Ç–µ –¥–µ—Ç–∞–ª—ñ —Ç–∞ –æ–ø–ª–∞—Ç—É.\n\n"
                        "4Ô∏è‚É£ –û—á—ñ–∫—É–π—Ç–µ —à–≤–∏–¥–∫—É –¥–æ—Å—Ç–∞–≤–∫—É! üöÄ\n\n"
                        "üì¢ <b>–ö–æ—Ä–∏—Å–Ω—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è:</b>\n\n"
                        "üîπ <a href='https://t.me/barbags_bot'>üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é</a>\n\n"
                        "üîπ <a href='https://t.me/share/url?url=https://t.me/barbags_bot&text=üëú –ú–∞–≥–∞–∑–∏–Ω BarBags: —Å—Ç–∏–ª—å–Ω—ñ —Å—É–º–∫–∏ —Ç–∞ –∞–∫—Å–µ—Å—É–∞—Ä–∏!'>üì§ –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è</a>\n"
                    ),
                    parse_mode="HTML",
                    reply_markup=types.InlineKeyboardMarkup(
                        inline_keyboard=[
                            [
                                types.InlineKeyboardButton(
                                    text="‚úçÔ∏è –ù–∞–ø–∏—Å–∞—Ç–∏ –º–µ–Ω–µ–¥–∂–µ—Ä—É",
                                    url="https://t.me/barska_olena"
                                )
                            ]
                        ]
                    )
                )

                await bot.pin_chat_message(chat_id=channel_id, message_id=msg.message_id)
                logger.info(f"‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –∑–∞–∫—Ä—ñ–ø–ª–µ–Ω–µ –≤ –∫–∞–Ω–∞–ª—ñ {channel_id}")
            except Exception as e:
                logger.error(f"‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–∫—Ä—ñ–ø–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –∫–∞–Ω–∞–ª—ñ {channel_id}. –ü–æ–º–∏–ª–∫–∞: {str(e)}")


async def on_startup():
    """–§—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ –±–æ—Ç–∞"""
    logger.info("üìå –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü—ñ—ó –∑–∞–∫—Ä—ñ–ø–ª–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å...")
    await pin_webapp_menu()

    bot = Bot(token=config.BOT_TOKEN)
    await set_bot_commands(bot)
    #
    # for channel_id in config.CHANNEL_IDS:
    #     await set_channel_commands(bot, channel_id)
    await bot.session.close()
